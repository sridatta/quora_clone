// Generated by CoffeeScript 1.3.1
(function() {
  var Answer, EventEmitter, Question,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Answer = require('./answer.js');

  Question = (function(_super) {

    __extends(Question, _super);

    Question.name = 'Question';

    function Question(text) {
      this.text = text;
      this.answers = [];
    }

    Question.prototype.addAnswer = function(answer) {
      var _this = this;
      this.answers.push(answer);
      this.emit('answer_added', answer);
      return answer.on('upvoted', function(count) {
        return _this.emit('answer_upvoted', count);
      });
    };

    return Question;

  })(EventEmitter);

  module.exports = Question;

}).call(this);
