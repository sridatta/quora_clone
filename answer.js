// Generated by CoffeeScript 1.3.1
(function() {
  var Answer, EventEmitter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Answer = (function(_super) {

    __extends(Answer, _super);

    Answer.name = 'Answer';

    function Answer(text) {
      this.text = text;
      this.votes = {};
      this.voteCount = 0;
    }

    Answer.prototype.upvote = function(userId) {
      if (this.votes[userId] == null) {
        this.votes[userId] = 'up';
        this.voteCount++;
        return this.emit('upvoted', this.voteCount);
      }
    };

    return Answer;

  })(EventEmitter);

  module.exports = Answer;

}).call(this);
